branding:
  icon: copy
  color: white
name: In Sync Action
description: Keep files in-sync between repositories
inputs:
#  git-author-email:
#    description: 'Email of the committer.'
#  git-author-name:
#    description: 'Name of the committer.'
  repositories:
    description: 'Repositories where changes will be pushed to'
    required: true
  token:
    description: >
      Access token to read/write to the destination repo.
      NOTE: same token is used to access all repos.
    required: true
  files:
    description: 'Files to keep in sync, may be new line delimited'
    required: true
  pr-branch:
    description: 'Branch to make the changes in'
    default: insync/${{ github.repository }}
  dry-run:
    description: "Set true to run the job without pushing."
    default: false
  rebase-strategy:
    description: "Disable automatic rebasing - auto|disabled"
    default: auto
runs:
  using: "composite"
  steps:
    # two phases: fetch, sync
    - uses: actions/checkout@v4
      with:
        clean: false
        persist-credentials: false
    - run: pwd; ls -al
      shell: bash
    - run: ${{ github.action_path }}/src/main/sh/run.sh "${{ inputs.files }}"
      env:
        REPOSITORIES: "${{ inputs.repositories }}"
        DST_TOKEN: ${{ inputs.token }}
        GITHUB_TOKEN: ${{ inputs.token }} # required to create the PR via hub command line
        PR_BRANCH: ${{ inputs.pr-branch }}
        DRY_RUN: ${{ inputs.dry-run }}
      shell: bash
